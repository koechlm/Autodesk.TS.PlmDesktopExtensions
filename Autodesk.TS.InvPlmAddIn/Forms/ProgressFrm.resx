<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="$this.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="ProgressFrm.IconOptions.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAQAQAAMQOAADEDgAAAAAAAAAA
        AAAAAAAAAFRsIABbceQBXXP/AVtx/wBVbP8AVWz/AFZs/wZZb/8AVm3/AFJp/wBTav8BWnD/AVpw/wFh
        eP8SYnd5AAAAAABZbT4BXXP/AVtx/wBSav9bk6L/MnWI/0aCk/+IrLf/X5Si/4iwu/94pLD/C150/wBY
        bv8BYXj/EmJ3eQAAAAAAOUgwAFxy+wFbcv8ATWX/g665/7zS2P+xy9L/TX+Q/5G0vv+/1tv/yNre/w5e
        dP8AV27/AWF4/xJid3l04Po6MZGpcQBQZvUBVWr/AE1i/0uDkf+BpK7/ZpSf/yRld/9Uh5T/RX2M/2yW
        ov8KWGz/AFJm/wFedf8SYnl5ZtbydmXd+v8vlK38AW6J/wFxjv8AbIn/AGmH/wBphv8Ab4z/AGuI/wBr
        iP8AaYb/AXGN/wJzj/8Ba4b/El5yeWPQ7G1r4///V9Lx/wa04f8BseH/ArLg/wGy4P8BsuH/ALLg/wCy
        4P8CsuH/ArLg/wOy4f8Duen/Aoms/xJRZHlj0OxtaN79/1HJ6P8GsN3/Aa7c/wOv3P8Dr9z/AKzb/wOr
        2/8Aq9r/Aq7c/wOv3P8Dr9z/A7Xk/wKHqf8SU2R5Y9DsbWje/f9Ryej/Bq/c/wGt2/8Drtv/AKnZ/0/F
        5v/C6vb/nt/x/wau2/8Brdr/A67b/wO04/8Ch6n/ElNkeWPQ7G1o3v3/Ucno/wav3P8Brdv/Aa7b/wCo
        2P+u5PP///////7///8vuuH/AKrZ/wOu2/8DtOP/Aoep/xJTZHlj0OxtaN79/1HJ6P8Gr9z/Aa3b/wCs
        2v8Sst3/7Pn8/5/g8f/j9vv/ctDq/wCn2P8Drtv/A7Tj/wKHqf8SU2R5Y9DsbWje/f9Ryej/Bq/c/wGt
        2/8AqNj/TsTl//////9DvuL/vej1/7no9f8AqNj/Aa7b/wO04/8Ch6n/ElNkeWPQ7G1o3v3/Ucno/wav
        3P8Ardv/AKfY/5bc8P/2/P7/B6za/4jY7v/1/P3/ErLd/wCs2v8DtOP/Aoep/xJTZHlj0OxtaN79/1HJ
        6P8Gr9z/AKza/wyv3P/y+v3/w+v2/wCj1v9Sxeb//////1XG5v8AqNj/A7Ti/wKLr/8QU2WCZdHtdWvk
        //9RyOf/Bq/c/wCr2v8Us93/f9bt/0HC5P8Bqdn/FbPd/3vV7P88wOP/Aava/wO45/8AjLG6EVFkN13J
        50tn3PjzWNf4/wau2/8Brdv/Aa7b/wCo2P8Aqtn/A6/b/wCt2v8Ap9j/AKva/wOv2/8Dve//ArDgagAA
        AAAAAAAAX8XlJ07M7awJtuT/Aa7b/wOu2/8Drtv/A67b/wOu2/8Drtv/A67b/wOu2/8DsN7/ArXl+ACp
        100AAAAAgAAAAIAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAQAAgAEAAA==
</value>
  </data>
  <data name="ProgressFrm.IconOptions.LargeImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>